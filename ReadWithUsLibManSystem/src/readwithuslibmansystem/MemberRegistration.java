/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package readwithuslibmansystem;

import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author abans tangalle
 */
public class MemberRegistration extends javax.swing.JFrame {
    
    public String MemID, MemFName, MemLName, Add1, Add2, City, Gender, NIC, DOB, Mobile, Home, Passw;
    public int Age;
    
    /**
     * Creates new form MemberRegistration
     */
    public MemberRegistration() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        txtMeId = new javax.swing.JTextField();
        txtMFna = new javax.swing.JTextField();
        txtMLna = new javax.swing.JTextField();
        txtAdli1 = new javax.swing.JTextField();
        txtAdli2 = new javax.swing.JTextField();
        txtNic = new javax.swing.JTextField();
        txtCity = new javax.swing.JTextField();
        txtMobile = new javax.swing.JTextField();
        txtHome = new javax.swing.JTextField();
        pstPass = new javax.swing.JPasswordField();
        jXDateDOB = new org.jdesktop.swingx.JXDatePicker();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnSubm = new javax.swing.JButton();
        btnUpda = new javax.swing.JButton();
        btnDele = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        rdbMale = new javax.swing.JRadioButton();
        rdbFemale = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Add Member");

        jPanel1.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("Password      :");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(670, 360, 170, 40);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setText("Date of Birth :");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(670, 240, 170, 40);

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setText("City                           :");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(60, 310, 250, 30);

        jLabel5.setFont(new java.awt.Font("Algerian", 1, 36)); // NOI18N
        jLabel5.setText("Member Details");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(500, 0, 360, 50);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel6.setText("Member ID               :");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(60, 60, 250, 30);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel7.setText("Member First Name :");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(60, 110, 250, 30);

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel8.setText("Member Last Name :");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(60, 160, 250, 30);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel9.setText("Address Line1          :");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(60, 210, 250, 30);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel10.setText("NIC No                     :");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(60, 360, 250, 40);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel11.setText("Address Line2          :");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(60, 260, 250, 30);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel12.setText("Contacts        :");
        jPanel1.add(jLabel12);
        jLabel12.setBounds(670, 50, 170, 50);

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel13.setText("Age                :");
        jPanel1.add(jLabel13);
        jLabel13.setBounds(670, 300, 170, 40);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel14.setText("Gender          :");
        jPanel1.add(jLabel14);
        jLabel14.setBounds(670, 180, 180, 40);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel16.setText("Home");
        jPanel1.add(jLabel16);
        jLabel16.setBounds(850, 120, 60, 30);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel17.setText("Mobile");
        jPanel1.add(jLabel17);
        jLabel17.setBounds(850, 60, 70, 30);

        txtAge.setBackground(new java.awt.Color(255, 255, 204));
        txtAge.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtAge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAgeKeyPressed(evt);
            }
        });
        jPanel1.add(txtAge);
        txtAge.setBounds(850, 310, 330, 30);

        txtMeId.setBackground(new java.awt.Color(255, 255, 204));
        txtMeId.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtMeId.setToolTipText("Press Enter Key to Search Member");
        txtMeId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMeIdKeyPressed(evt);
            }
        });
        jPanel1.add(txtMeId);
        txtMeId.setBounds(320, 60, 330, 30);

        txtMFna.setBackground(new java.awt.Color(255, 255, 204));
        txtMFna.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtMFna.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMFnaKeyPressed(evt);
            }
        });
        jPanel1.add(txtMFna);
        txtMFna.setBounds(320, 110, 330, 30);

        txtMLna.setBackground(new java.awt.Color(255, 255, 204));
        txtMLna.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtMLna.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMLnaKeyPressed(evt);
            }
        });
        jPanel1.add(txtMLna);
        txtMLna.setBounds(320, 160, 330, 30);

        txtAdli1.setBackground(new java.awt.Color(255, 255, 204));
        txtAdli1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtAdli1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAdli1KeyPressed(evt);
            }
        });
        jPanel1.add(txtAdli1);
        txtAdli1.setBounds(320, 210, 330, 30);

        txtAdli2.setBackground(new java.awt.Color(255, 255, 204));
        txtAdli2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtAdli2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAdli2KeyPressed(evt);
            }
        });
        jPanel1.add(txtAdli2);
        txtAdli2.setBounds(320, 260, 330, 30);

        txtNic.setBackground(new java.awt.Color(255, 255, 204));
        txtNic.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtNic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNicKeyPressed(evt);
            }
        });
        jPanel1.add(txtNic);
        txtNic.setBounds(320, 370, 330, 30);

        txtCity.setBackground(new java.awt.Color(255, 255, 204));
        txtCity.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtCity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCityKeyPressed(evt);
            }
        });
        jPanel1.add(txtCity);
        txtCity.setBounds(320, 310, 330, 30);

        txtMobile.setBackground(new java.awt.Color(255, 255, 204));
        txtMobile.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtMobile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMobileKeyPressed(evt);
            }
        });
        jPanel1.add(txtMobile);
        txtMobile.setBounds(930, 60, 250, 30);

        txtHome.setBackground(new java.awt.Color(255, 255, 204));
        txtHome.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtHome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtHomeKeyPressed(evt);
            }
        });
        jPanel1.add(txtHome);
        txtHome.setBounds(930, 120, 250, 30);

        pstPass.setBackground(new java.awt.Color(255, 255, 204));
        pstPass.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel1.add(pstPass);
        pstPass.setBounds(850, 370, 330, 30);

        jXDateDOB.setBackground(new java.awt.Color(255, 255, 204));
        jXDateDOB.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jXDateDOB.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jXDateDOBKeyPressed(evt);
            }
        });
        jPanel1.add(jXDateDOB);
        jXDateDOB.setBounds(850, 250, 330, 30);

        jTable1.setBackground(new java.awt.Color(204, 204, 204));
        jTable1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Member ID", "Member First Name", "Member Last Name", "Address Line1", "Adddress Line2", "City", "NIC", "Mobile", "Home", "Gender", "DOB", "Age", "Password"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, true, true, true, true, false, true, true, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(50, 470, 1270, 180);

        btnSubm.setBackground(new java.awt.Color(51, 51, 255));
        btnSubm.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnSubm.setText("SUBMIT");
        btnSubm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmActionPerformed(evt);
            }
        });
        jPanel1.add(btnSubm);
        btnSubm.setBounds(1200, 60, 110, 40);

        btnUpda.setBackground(new java.awt.Color(51, 51, 255));
        btnUpda.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnUpda.setText("UPDATE");
        btnUpda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdaActionPerformed(evt);
            }
        });
        jPanel1.add(btnUpda);
        btnUpda.setBounds(1200, 140, 110, 40);

        btnDele.setBackground(new java.awt.Color(51, 51, 255));
        btnDele.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnDele.setText("DELETE");
        btnDele.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleActionPerformed(evt);
            }
        });
        jPanel1.add(btnDele);
        btnDele.setBounds(1200, 210, 110, 40);

        btnClear.setBackground(new java.awt.Color(51, 51, 255));
        btnClear.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnClear.setText("CLEAR");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        jPanel1.add(btnClear);
        btnClear.setBounds(1200, 280, 110, 40);

        btnBack.setBackground(new java.awt.Color(51, 51, 255));
        btnBack.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnBack.setText("BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        jPanel1.add(btnBack);
        btnBack.setBounds(1200, 360, 110, 40);

        rdbMale.setBackground(new java.awt.Color(255, 255, 204));
        buttonGroup1.add(rdbMale);
        rdbMale.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        rdbMale.setText("Male");
        rdbMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbMaleActionPerformed(evt);
            }
        });
        jPanel1.add(rdbMale);
        rdbMale.setBounds(850, 190, 120, 30);

        rdbFemale.setBackground(new java.awt.Color(255, 255, 204));
        buttonGroup1.add(rdbFemale);
        rdbFemale.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        rdbFemale.setText("Female");
        jPanel1.add(rdbFemale);
        rdbFemale.setBounds(1050, 190, 130, 30);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/LMSImages/backround6.jpg"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 1500, 680);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1500, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 680, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleActionPerformed
        
        MemID = this.txtMeId.getText();
       
        DBConnection.DBConnection();
        
        try{
            
            Statement st = DBConnection.con.createStatement();
            st.executeUpdate("DELETE FROM `member` WHERE `MemID`= '"+MemID+"' ");
            
            JOptionPane.showMessageDialog(null, "Member Deleted Successfully", "Successful", JOptionPane.INFORMATION_MESSAGE);
            
            LoadTable ();
            ClearData();
            DBConnection.con.close();
            
        }catch(SQLException ex){
            
            JOptionPane.showMessageDialog(null, ex.getMessage());
            
        }
    }//GEN-LAST:event_btnDeleActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        LibrarianPanel lp = new LibrarianPanel();
        lp.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void rdbMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbMaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdbMaleActionPerformed

    private void btnSubmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmActionPerformed
       if(this.txtMeId.getText().isEmpty()==true){
    
        JOptionPane.showMessageDialog(null, "Please Insert Member ID", "Warning", JOptionPane.WARNING_MESSAGE);
    
       }else if(this.txtMFna.getText().isEmpty()==true){
    
        JOptionPane.showMessageDialog(null, "Please Insert Member First Name", "Warning", JOptionPane.WARNING_MESSAGE);
           
       }else if(this.txtMLna.getText().isEmpty()==true){
    
        JOptionPane.showMessageDialog(null, "Please Insert Member Last Name", "Warning", JOptionPane.WARNING_MESSAGE);
    
       }else if(this.txtAdli1.getText().isEmpty()==true){
    
        JOptionPane.showMessageDialog(null, "Please Insert Addrress Line1", "Warning", JOptionPane.WARNING_MESSAGE);
            
       }else if(this.txtAdli2.getText().isEmpty()==true){
    
        JOptionPane.showMessageDialog(null, "Please Insert Addrress Line2", "Warning", JOptionPane.WARNING_MESSAGE);
            
       }else if(this.txtCity.getText().isEmpty()==true){
    
        JOptionPane.showMessageDialog(null, "Please Insert City", "Warning", JOptionPane.WARNING_MESSAGE);
            
       }else if(this.txtNic.getText().isEmpty()==true){
    
        JOptionPane.showMessageDialog(null, "Please Insert NIC No", "Warning", JOptionPane.WARNING_MESSAGE);
            
       }else if(this.txtMobile.getText().isEmpty()==true){
    
        JOptionPane.showMessageDialog(null, "Please Insert Mobile Number", "Warning", JOptionPane.WARNING_MESSAGE);
            
       }else if(this.jXDateDOB.getDate()== null){
    
        JOptionPane.showMessageDialog(null, "Please Insert Date of Birth", "Warning", JOptionPane.WARNING_MESSAGE);
            
       }else if(this.txtAge.getText().isEmpty()==true){
    
        JOptionPane.showMessageDialog(null, "Please Insert Age", "Warning", JOptionPane.WARNING_MESSAGE);
            
       }else if(this.pstPass.getText().isEmpty()==true){
    
        JOptionPane.showMessageDialog(null, "Please Insert Password", "Warning", JOptionPane.WARNING_MESSAGE);
            
       }else{
       
           MemID = this.txtMeId.getText();
           MemFName = this.txtMFna.getText();
           MemLName = this.txtMLna.getText();
           Add1 = this.txtAdli1.getText();
           Add2 = this.txtAdli2.getText();
           City = this.txtCity.getText();
                if(this.rdbFemale.isSelected()==true){
        
                    Gender = "Female";   
                    
                }else if(this.rdbMale.isSelected()==true){
           
                    Gender = "Male";
                    
                }else{
                    
                    Gender = "null";
                    
                    JOptionPane.showMessageDialog(null, "Please Select a Gender", "Warning", JOptionPane.WARNING_MESSAGE);
        
                }
           NIC = this.txtNic.getText();
           SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
           DOB = sdf.format(this.jXDateDOB.getDate());
           Age = Integer.parseInt(this.txtAge.getText());
           Mobile = this.txtMobile.getText();
           Home = this.txtHome.getText();
           Passw = this.pstPass.getText();
           
           DBConnection.DBConnection();
           
           try{
           
               Statement s = DBConnection.con.createStatement();
               s.executeUpdate("INSERT INTO member VALUES('"+MemID+"','"+MemFName+"','"+MemLName+"','"+Add1+"','"+Add2+"','"+City+"','"+Gender+"','"+DOB+"','"+Age+"','"+NIC+"','"+Passw+"')");
               
               Statement s1 = DBConnection.con.createStatement();
               s1.executeUpdate("INSERT INTO memcontact VALUES('"+MemID+"','"+Mobile+"','"+Home+"')");
               
               JOptionPane.showMessageDialog(null, "Member Added Successfully", "Successful", JOptionPane.INFORMATION_MESSAGE);
               
               LoadTable();
              
               DBConnection.con.close();
               
           }catch(SQLException ex){
           
               JOptionPane.showMessageDialog(null, ex.getMessage());
               
           }       
       }
    }//GEN-LAST:event_btnSubmActionPerformed

    private void txtMeIdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMeIdKeyPressed
                
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            
            this.txtMFna.grabFocus();
        
            MemID = this.txtMeId.getText();
            
            String Query = "SELECT *, Mobile, Home  FROM member INNER JOIN memcontact ON member.MemID = memcontact.MemID WHERE member.MemID = '"+MemID+"'";
   
            DBConnection.DBConnection();
            
                try {
                    
                    Statement s = DBConnection.con.createStatement();
                    ResultSet rs = s.executeQuery(Query);
                    while(rs.next()){
                        this.txtMFna.setText(rs.getString("MemFName"));
                        this.txtMLna.setText(rs.getString("MemLName"));
                        this.txtAdli1.setText(rs.getString("Addline1"));
                        this.txtAdli2.setText(rs.getString("Addline2"));
                        this.txtCity.setText(rs.getString("City"));
                        this.txtMobile.setText(rs.getString("Mobile"));
                        this.txtHome.setText(rs.getString("Home"));
                        this.txtNic.setText(rs.getString("NIC"));
                            if(rs.getString("Gender").equalsIgnoreCase("Male")){
                    
                                this.rdbMale.setSelected(true);
                
                            }else{
                                    
                                this.rdbFemale.setSelected(true);
                    
                            }
                        SimpleDateFormat Date = new SimpleDateFormat("yyyy-MM-dd");
                        this.jXDateDOB.setDate(rs.getDate("DOB"));
                        this.txtAge.setText(rs.getString("Age"));
                        this.pstPass.setText(rs.getString("Pass"));    
                       
                    }
                                  
                } catch (Exception ex) {
                    
                     JOptionPane.showMessageDialog(null, ex.getMessage());
                    
                }        
        }
    }//GEN-LAST:event_txtMeIdKeyPressed

    private void btnUpdaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdaActionPerformed
        
           MemID = this.txtMeId.getText();
           MemFName = this.txtMFna.getText();
           MemLName = this.txtMLna.getText();
           Add1 = this.txtAdli1.getText();
           Add2 = this.txtAdli2.getText();
           City = this.txtCity.getText();
                if(this.rdbFemale.isSelected()==true){
        
                    Gender = "Female";   
                    
                }else if(this.rdbMale.isSelected()==true){
           
                    Gender = "Male";
                    
                }else{
                    
                    Gender = "null";
                    
                    JOptionPane.showMessageDialog(null, "Please Select a Gender", "Warning", JOptionPane.WARNING_MESSAGE);
        
                }
           NIC = this.txtNic.getText();            
           SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
           DOB = sdf.format(this.jXDateDOB.getDate());
           Age = Integer.parseInt(this.txtAge.getText());
           //ContNo = this.txtMobile.getText();
           Passw = this.pstPass.getText();
           
           try {
               
               Statement s = DBConnection.con.createStatement();
               s.executeUpdate("UPDATE `member` SET `MemFName`='"+MemFName+"', `MemLName`='"+MemLName+"', `Addline1`='"+Add1+"', `Addline2`='"+Add2+"', `City`='"+City+"', `Gender`='"+Gender+"', `DOB`='"+DOB+"', `Age`='"+Age+"', `NIC`='"+NIC+"', `Pass`='"+Passw+"' WHERE `MemID`= '"+MemID+"' ");
               
             
               JOptionPane.showMessageDialog(null, "Member Updated Successfully", "Successful", JOptionPane.INFORMATION_MESSAGE);
               
               LoadTable ();
               ClearData();
               
               
               
           } catch (SQLException ex) {
               
               JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_btnUpdaActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        ClearData();
    }//GEN-LAST:event_btnClearActionPerformed

    private void txtMFnaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMFnaKeyPressed
        
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            
            this.txtMLna.grabFocus();
        }
    }//GEN-LAST:event_txtMFnaKeyPressed

    private void txtAdli1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAdli1KeyPressed
        
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            
            this.txtAdli2.grabFocus();
        }
    }//GEN-LAST:event_txtAdli1KeyPressed

    private void txtAdli2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAdli2KeyPressed
       
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            
            this.txtCity.grabFocus();
        }
    }//GEN-LAST:event_txtAdli2KeyPressed

    private void txtMLnaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMLnaKeyPressed
        
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            
            this.txtAdli1.grabFocus();
        }
    }//GEN-LAST:event_txtMLnaKeyPressed

    private void txtCityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCityKeyPressed
        
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            
            this.txtNic.grabFocus();
        }
    }//GEN-LAST:event_txtCityKeyPressed

    private void txtNicKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNicKeyPressed
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            
            this.txtMobile.grabFocus();
        }
    }//GEN-LAST:event_txtNicKeyPressed

    private void txtMobileKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMobileKeyPressed
        
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            
            this.txtHome.grabFocus();
        }
    }//GEN-LAST:event_txtMobileKeyPressed

    private void jXDateDOBKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jXDateDOBKeyPressed
        
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            
            this.txtAge.grabFocus();
        }
    }//GEN-LAST:event_jXDateDOBKeyPressed

    private void txtAgeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAgeKeyPressed
        
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            
            this.pstPass.grabFocus();
        }
    }//GEN-LAST:event_txtAgeKeyPressed

    private void txtHomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHomeKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHomeKeyPressed
    
    void ClearData(){
    
         this.txtMeId.setText("");
         this.txtMFna.setText("");
         this.txtMLna.setText("");
         this.txtAdli1.setText("");
         this.txtAdli2.setText("");
         this.txtCity.setText("");
         this.txtNic.setText("");
         this.jXDateDOB.setDate(null);//remove value in the field
         this.txtMobile.setText("");
         this.txtHome.setText("");
         this.pstPass.setText("");
         this.txtAge.setText("");
         this.buttonGroup1.clearSelection();
    }
    
    void LoadTable(){
        
         DefaultTableModel dtm = new DefaultTableModel();
         
            dtm.addColumn("MemID");
            dtm.addColumn("MemFName");
            dtm.addColumn("MemLName");
            dtm.addColumn("Addline1");
            dtm.addColumn("Addline2");
            dtm.addColumn("City");
            dtm.addColumn("Gender");
            dtm.addColumn("Mobile");
            dtm.addColumn("Home");
            dtm.addColumn("DOB");
            dtm.addColumn("Age");
            dtm.addColumn("NIC");
            dtm.addColumn("Pass");
           
         
         String Query = "SELECT *, Mobile, Home FROM member INNER JOIN memcontact ON member.MemID = memcontact.MemID ";
         
         DBConnection.DBConnection();
         
         try{
             Statement st = DBConnection.con.prepareStatement(Query);
             ResultSet rs = st.executeQuery(Query);
             while(rs.next()){
                 
                String MemID = rs.getString("MemID");
                String MemFName = rs.getString("MemFName");
                String MemLName = rs.getString("MemLName");
                String Add1 = rs.getString("Addline1");
                String Add2 = rs.getString("Addline2");
                String City = rs.getString("City");
                String Gender = rs.getString("Gender");
                String Mobile = rs.getString("Mobile");
                String Home = rs.getString("Home");
                String DOB = rs.getString("DOB");
                String Age = rs.getString("Age");
                String NIC = rs.getString("NIC");
                String Passw = rs.getString("Pass");
                
                 dtm.addRow(new String[]{MemID, MemFName, MemLName, Add1, Add2, City, Gender, Mobile, Home, DOB, Age, NIC, Passw});
             
         }
             
             this.jTable1.setModel(dtm);
             
             //DBConnection.con.close();
             
         
         }catch(SQLException ex){
             
            JOptionPane.showMessageDialog(null, ex.getMessage());
            
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MemberRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MemberRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MemberRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MemberRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MemberRegistration().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDele;
    private javax.swing.JButton btnSubm;
    private javax.swing.JButton btnUpda;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private org.jdesktop.swingx.JXDatePicker jXDateDOB;
    private javax.swing.JPasswordField pstPass;
    private javax.swing.JRadioButton rdbFemale;
    private javax.swing.JRadioButton rdbMale;
    private javax.swing.JTextField txtAdli1;
    private javax.swing.JTextField txtAdli2;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtHome;
    private javax.swing.JTextField txtMFna;
    private javax.swing.JTextField txtMLna;
    private javax.swing.JTextField txtMeId;
    private javax.swing.JTextField txtMobile;
    private javax.swing.JTextField txtNic;
    // End of variables declaration//GEN-END:variables
}
