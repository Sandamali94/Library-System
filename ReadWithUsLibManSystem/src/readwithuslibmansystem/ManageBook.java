/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package readwithuslibmansystem;

import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author abans tangalle
 */
public class ManageBook extends javax.swing.JFrame {
    
        String BookID, AuthID, BookName, Categ, PurchDate;
        double Price;
        int Quan, Avail;

    /**
     * Creates new form ManageBook1
     */
    public ManageBook() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLB = new javax.swing.JLabel();
        jLBI = new javax.swing.JLabel();
        jLBFn = new javax.swing.JLabel();
        jLpri = new javax.swing.JLabel();
        jLCateg = new javax.swing.JLabel();
        jLPurchDate = new javax.swing.JLabel();
        jQuantity = new javax.swing.JLabel();
        jAvailable = new javax.swing.JLabel();
        jLAuthID = new javax.swing.JLabel();
        jTboid = new javax.swing.JTextField();
        jTbname = new javax.swing.JTextField();
        jTPric1 = new javax.swing.JTextField();
        jTCatego = new javax.swing.JTextField();
        jTQty = new javax.swing.JTextField();
        jTAvaila = new javax.swing.JTextField();
        jTAuthID = new javax.swing.JTextField();
        jXDatePurchasedDate = new org.jdesktop.swingx.JXDatePicker();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jBClear = new javax.swing.JButton();
        jBDele1 = new javax.swing.JButton();
        jBUpda = new javax.swing.JButton();
        jBSubm = new javax.swing.JButton();
        jBBac = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Manage Book");

        jPanel1.setLayout(null);

        jLB.setFont(new java.awt.Font("Algerian", 1, 36)); // NOI18N
        jLB.setText("MANAGE BOOK");
        jPanel1.add(jLB);
        jLB.setBounds(540, 30, 280, 50);

        jLBI.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLBI.setText("Book ID               :");
        jPanel1.add(jLBI);
        jLBI.setBounds(30, 100, 220, 30);

        jLBFn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLBFn.setText("Book Name         :");
        jPanel1.add(jLBFn);
        jLBFn.setBounds(30, 210, 220, 40);

        jLpri.setBackground(new java.awt.Color(255, 255, 255));
        jLpri.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLpri.setText("Price                    :");
        jPanel1.add(jLpri);
        jLpri.setBounds(30, 280, 220, 29);

        jLCateg.setBackground(new java.awt.Color(255, 255, 255));
        jLCateg.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLCateg.setText("Category             :");
        jPanel1.add(jLCateg);
        jLCateg.setBounds(30, 330, 220, 40);

        jLPurchDate.setBackground(new java.awt.Color(255, 255, 255));
        jLPurchDate.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLPurchDate.setText("Purchased Date  :");
        jPanel1.add(jLPurchDate);
        jLPurchDate.setBounds(30, 390, 220, 50);

        jQuantity.setBackground(new java.awt.Color(255, 255, 255));
        jQuantity.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jQuantity.setText("Quantity              :");
        jPanel1.add(jQuantity);
        jQuantity.setBounds(30, 460, 220, 29);

        jAvailable.setBackground(new java.awt.Color(255, 255, 255));
        jAvailable.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jAvailable.setText("Available             :");
        jPanel1.add(jAvailable);
        jAvailable.setBounds(30, 520, 220, 29);

        jLAuthID.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLAuthID.setText("Author ID            :");
        jPanel1.add(jLAuthID);
        jLAuthID.setBounds(30, 150, 220, 40);

        jTboid.setBackground(new java.awt.Color(255, 255, 204));
        jTboid.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTboid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTboidKeyPressed(evt);
            }
        });
        jPanel1.add(jTboid);
        jTboid.setBounds(240, 100, 400, 32);

        jTbname.setBackground(new java.awt.Color(255, 255, 204));
        jTbname.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTbname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTbnameKeyPressed(evt);
            }
        });
        jPanel1.add(jTbname);
        jTbname.setBounds(240, 220, 400, 32);

        jTPric1.setBackground(new java.awt.Color(255, 255, 204));
        jTPric1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTPric1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTPric1KeyPressed(evt);
            }
        });
        jPanel1.add(jTPric1);
        jTPric1.setBounds(240, 280, 400, 32);

        jTCatego.setBackground(new java.awt.Color(255, 255, 204));
        jTCatego.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTCatego.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTCategoKeyPressed(evt);
            }
        });
        jPanel1.add(jTCatego);
        jTCatego.setBounds(240, 340, 400, 32);

        jTQty.setBackground(new java.awt.Color(255, 255, 204));
        jTQty.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTQty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTQtyKeyPressed(evt);
            }
        });
        jPanel1.add(jTQty);
        jTQty.setBounds(240, 460, 400, 32);

        jTAvaila.setBackground(new java.awt.Color(255, 255, 204));
        jTAvaila.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel1.add(jTAvaila);
        jTAvaila.setBounds(240, 520, 400, 32);

        jTAuthID.setBackground(new java.awt.Color(255, 255, 204));
        jTAuthID.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTAuthID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTAuthIDKeyPressed(evt);
            }
        });
        jPanel1.add(jTAuthID);
        jTAuthID.setBounds(240, 160, 400, 32);

        jXDatePurchasedDate.setBackground(new java.awt.Color(255, 255, 204));
        jXDatePurchasedDate.setToolTipText("");
        jXDatePurchasedDate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jXDatePurchasedDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jXDatePurchasedDateKeyPressed(evt);
            }
        });
        jPanel1.add(jXDatePurchasedDate);
        jXDatePurchasedDate.setBounds(240, 400, 400, 32);

        jTable1.setBackground(new java.awt.Color(204, 204, 204));
        jTable1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Book ID", "Author ID", "Book Name", "Price", "Category", "Purchased Date", "Quantity", "Available"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(650, 110, 690, 430);

        jBClear.setBackground(new java.awt.Color(51, 51, 255));
        jBClear.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jBClear.setText("CLEAR");
        jBClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBClearActionPerformed(evt);
            }
        });
        jPanel1.add(jBClear);
        jBClear.setBounds(540, 590, 110, 40);

        jBDele1.setBackground(new java.awt.Color(51, 51, 255));
        jBDele1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jBDele1.setText("DELETE");
        jBDele1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDele1ActionPerformed(evt);
            }
        });
        jPanel1.add(jBDele1);
        jBDele1.setBounds(370, 590, 110, 40);

        jBUpda.setBackground(new java.awt.Color(51, 51, 255));
        jBUpda.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jBUpda.setText("UPDATE");
        jBUpda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBUpdaActionPerformed(evt);
            }
        });
        jPanel1.add(jBUpda);
        jBUpda.setBounds(200, 590, 110, 40);

        jBSubm.setBackground(new java.awt.Color(51, 51, 255));
        jBSubm.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jBSubm.setText("SUBMIT");
        jBSubm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSubmActionPerformed(evt);
            }
        });
        jPanel1.add(jBSubm);
        jBSubm.setBounds(40, 590, 110, 40);

        jBBac.setBackground(new java.awt.Color(51, 51, 255));
        jBBac.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jBBac.setText("BACK");
        jBBac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBacActionPerformed(evt);
            }
        });
        jPanel1.add(jBBac);
        jBBac.setBounds(1180, 580, 110, 40);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/LMSImages/backround6.jpg"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 1500, 680);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1500, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 680, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBClearActionPerformed
        
        ClearData();
        
    }//GEN-LAST:event_jBClearActionPerformed

    private void jBSubmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSubmActionPerformed
       
       if(this.jTboid.getText().isEmpty()==true){
    
            JOptionPane.showMessageDialog(null, "Please Insert Book ID", "Warning", JOptionPane.WARNING_MESSAGE);
    
       }else if(this.jTAuthID.getText().isEmpty()==true){
    
            JOptionPane.showMessageDialog(null, "Please Insert Author ID", "Warning", JOptionPane.WARNING_MESSAGE);
           
       }else if(this.jTbname.getText().isEmpty()==true){
    
            JOptionPane.showMessageDialog(null, "Please Insert Book Name", "Warning", JOptionPane.WARNING_MESSAGE);
           
       }else if(this.jTPric1.getText().isEmpty()==true){
    
            JOptionPane.showMessageDialog(null, "Please Insert Price", "Warning", JOptionPane.WARNING_MESSAGE);
    
       }else if(this.jTCatego.getText().isEmpty()==true){
    
            JOptionPane.showMessageDialog(null, "Please Insert Category", "Warning", JOptionPane.WARNING_MESSAGE);
            
       }else if(this.jXDatePurchasedDate.getDate()== null){
    
            JOptionPane.showMessageDialog(null, "Please Insert Purchase Date", "Warning", JOptionPane.WARNING_MESSAGE);
            
       }else if(this.jTQty.getText().isEmpty()==true){
  
            JOptionPane.showMessageDialog(null, "Please Insert Quantity", "Warning", JOptionPane.WARNING_MESSAGE);
            
       }else{
       
           BookID = this.jTboid.getText();
           AuthID = this.jTAuthID.getText();
           BookName = this.jTbname.getText();
           Categ = this.jTCatego.getText();
           SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
           PurchDate = sdf.format(this.jXDatePurchasedDate.getDate());        
           Price = Double.parseDouble(this.jTPric1.getText());
           Quan = Integer.parseInt(this.jTQty.getText());          
           Avail = Integer.parseInt(this.jTAvaila.getText());
           
           DBConnection.DBConnection();
           
           try{
           
               Statement s = DBConnection.con.createStatement();
               s.executeUpdate("INSERT INTO book VALUES('"+BookID+"','"+BookName+"','"+Price+"','"+Categ+"','"+Avail+"')");
               
               Statement s1 = DBConnection.con.createStatement();
               s1.executeUpdate("INSERT INTO bookpurchase VALUES('"+BookID+"','"+PurchDate+"','"+Quan+"')");
               
               Statement s2 = DBConnection.con.createStatement();
               s2.executeUpdate("INSERT INTO bookwrite VALUES('"+BookID+"','"+AuthID+"')");
               
               JOptionPane.showMessageDialog(null, "Book Added Successfully", "Successful", JOptionPane.INFORMATION_MESSAGE);
               
               LoadTable ();
               ClearData();
               DBConnection.con.close();
               
           }catch(SQLException ex){
           
               JOptionPane.showMessageDialog(null, ex.getMessage());
               
           }       
       }
    }//GEN-LAST:event_jBSubmActionPerformed

    private void jBBacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBacActionPerformed
        LibrarianPanel lp = new LibrarianPanel();
        lp.setVisible(true);
        this.dispose(); 
    }//GEN-LAST:event_jBBacActionPerformed

    private void jTboidKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTboidKeyPressed
     if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            this.jTAuthID.grabFocus();
             
            BookID = this.jTboid.getText();     
            String Query = "SELECT *, AuthID, PurchaseDate, Quantity FROM book INNER JOIN bookpurchase "
                    + "ON book.BookID = bookpurchase.BookID INNER JOIN bookwrite ON book.BookID = bookwrite.BookID "
                    + "WHERE book.BookID = '"+BookID+"'";
            DBConnection.DBConnection();
            
                try {                   
                    Statement s = DBConnection.con.createStatement();
                    ResultSet rs = s.executeQuery(Query);
                    while(rs.next()){
                        this.jTAuthID.setText(rs.getString("AuthID"));
                        this.jTbname.setText(rs.getString("BookName"));
                        this.jTPric1.setText(rs.getString("Price"));
                        this.jTCatego.setText(rs.getString("Category"));
                        SimpleDateFormat Date = new SimpleDateFormat("yyyy-MM-dd");
                        this.jXDatePurchasedDate.setDate(rs.getDate("PurchaseDate"));
                        this.jTQty.setText(rs.getString("Quantity"));
                        this.jTAvaila.setText(rs.getString("Available"));                  
                    }                                      
                } catch (Exception ex) {
                    
                     JOptionPane.showMessageDialog(null, ex.getMessage());
                    
                }        
        }
    }//GEN-LAST:event_jTboidKeyPressed

    private void jBUpdaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBUpdaActionPerformed
           
           BookID = this.jTboid.getText();
           AuthID = this.jTAuthID.getText();
           BookName = this.jTbname.getText();
           Price = Double.parseDouble(this.jTPric1.getText());
           Categ = this.jTCatego.getText();
           SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
           PurchDate = sdf.format(this.jXDatePurchasedDate.getDate());
           Quan = Integer.parseInt(this.jTQty.getText());
           Avail = Integer.parseInt(this.jTAvaila.getText());
           
           
           try {
               
               Statement s = DBConnection.con.createStatement();
               s.executeUpdate("UPDATE `book` SET `BookName`='"+BookName+"', `Price`='"+Price+"', `Category`='"+Categ+"' "
                       + "WHERE `BookID`= '"+BookID+"'");
               
               Statement s1 = DBConnection.con.createStatement();
               s1.executeUpdate("UPDATE `bookpurchase` SET `PurchaseDate`='"+PurchDate+"',`Quantity`='"+Quan+"'");
               
               Statement s2 = DBConnection.con.createStatement();
               s2.executeUpdate("UPDATE `bookwrite` SET `AuthID`='"+AuthID+"'");
               
               JOptionPane.showMessageDialog(null, "Data Updated Successfully", "Successful", JOptionPane.INFORMATION_MESSAGE);
               
               LoadTable ();
               ClearData();              
               DBConnection.con.close();
               
           } catch (SQLException ex) {
               
               JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_jBUpdaActionPerformed

    private void jBDele1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDele1ActionPerformed
        
        BookID = this.jTboid.getText();
       
        DBConnection.DBConnection();
        
        try{
            
            Statement st = DBConnection.con.createStatement();
            st.executeUpdate("DELETE FROM `book` WHERE `BookID`= '"+BookID+"' ");
            
            JOptionPane.showMessageDialog(null, "Data Deleted Successfully", "Successful", JOptionPane.INFORMATION_MESSAGE);
            
            LoadTable ();
            ClearData();
            DBConnection.con.close();
            
        }catch(SQLException ex){
            
            JOptionPane.showMessageDialog(null, ex.getMessage());
            
        }
    }//GEN-LAST:event_jBDele1ActionPerformed

    private void jTbnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTbnameKeyPressed
        
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            
            this.jTPric1.grabFocus();
        }
    }//GEN-LAST:event_jTbnameKeyPressed

    private void jTPric1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTPric1KeyPressed
        
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            
            this.jTCatego.grabFocus();
        }
    }//GEN-LAST:event_jTPric1KeyPressed

    private void jTCategoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTCategoKeyPressed
        
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            
            this.jXDatePurchasedDate.grabFocus();
        }
    }//GEN-LAST:event_jTCategoKeyPressed

    private void jXDatePurchasedDateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jXDatePurchasedDateKeyPressed
        
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            
            this.jTQty.grabFocus();
        }
    }//GEN-LAST:event_jXDatePurchasedDateKeyPressed

    private void jTAuthIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTAuthIDKeyPressed
        
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            
            this.jTbname.grabFocus();
        }
        
    }//GEN-LAST:event_jTAuthIDKeyPressed

    private void jTQtyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTQtyKeyPressed
        
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            
            this.jTAvaila.grabFocus();
        }
        
    }//GEN-LAST:event_jTQtyKeyPressed

void ClearData(){

         this.jTboid.setText("");
         this.jTAuthID.setText("");       
         this.jTbname.setText("");
         this.jTPric1.setText("");
         this.jTCatego.setText("");
         this.jXDatePurchasedDate.setDate(null);
         this.jTQty.setText("");
         this.jTAvaila.setText("");
}

void LoadTable (){
        
         DefaultTableModel dtm = new DefaultTableModel();
         
            dtm.addColumn("BookID");
            dtm.addColumn("AuthID");
            dtm.addColumn("BookName");
            dtm.addColumn("Price");
            dtm.addColumn("Category");
            dtm.addColumn("PurchaseDate");
            dtm.addColumn("Quantity");
            dtm.addColumn("Available");
         
         String Query = "SELECT *, AuthID, PurchaseDate, Quantity FROM book INNER JOIN bookpurchase ON book.BookID = bookpurchase.BookID INNER JOIN bookwrite ON book.BookID = bookwrite.BookID";
         
         DBConnection.DBConnection();
         
         try{
             Statement st = DBConnection.con.prepareStatement(Query);
             ResultSet rs = st.executeQuery(Query);
             while(rs.next()){
                 
                String BookID = rs.getString("BookID");
                String AuthID = rs.getString("AuthID");
                String BookName = rs.getString("BookName");
                String Price = rs.getString("Price");
                String Categ = rs.getString("Category");
                String PurchDate = rs.getString("PurchaseDate");
                String Quan = rs.getString("Quantity");
                String Avail = rs.getString("Available");
                
                
                 dtm.addRow(new String[]{BookID, AuthID, BookName, Price, Categ, PurchDate, Quan, Avail});
             
         }
             
             this.jTable1.setModel(dtm);
             
             DBConnection.con.close();
             
         
         }catch(SQLException ex){
             
            JOptionPane.showMessageDialog(null, ex.getMessage());
            
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageBook().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jAvailable;
    private javax.swing.JButton jBBac;
    private javax.swing.JButton jBClear;
    private javax.swing.JButton jBDele1;
    private javax.swing.JButton jBSubm;
    private javax.swing.JButton jBUpda;
    private javax.swing.JLabel jLAuthID;
    private javax.swing.JLabel jLB;
    private javax.swing.JLabel jLBFn;
    private javax.swing.JLabel jLBI;
    private javax.swing.JLabel jLCateg;
    private javax.swing.JLabel jLPurchDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLpri;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel jQuantity;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTAuthID;
    private javax.swing.JTextField jTAvaila;
    private javax.swing.JTextField jTCatego;
    private javax.swing.JTextField jTPric1;
    private javax.swing.JTextField jTQty;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTbname;
    private javax.swing.JTextField jTboid;
    private org.jdesktop.swingx.JXDatePicker jXDatePurchasedDate;
    // End of variables declaration//GEN-END:variables
}
