/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package readwithuslibmansystem;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author abans tangalle
 */
public class SearchBook extends javax.swing.JFrame {

    String  Input;
         
    
    /**
     * Creates new form SearchBook
     */
    public SearchBook() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jLSearch = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextIn = new javax.swing.JTextField();
        jBBack = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        rdbAuthor = new javax.swing.JRadioButton();
        rdbCatego = new javax.swing.JRadioButton();
        rdbTitle = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Search Book ");

        jPanel2.setLayout(null);

        jLSearch.setFont(new java.awt.Font("Algerian", 1, 36)); // NOI18N
        jLSearch.setText("SEARCH BOOK");
        jPanel2.add(jLSearch);
        jLSearch.setBounds(550, 40, 280, 50);

        jTable1.setBackground(new java.awt.Color(204, 204, 204));
        jTable1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Book ID", "Book Name", "Price", "Author First Name", "Author Last Name", "Category"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(230, 290, 830, 220);

        jTextIn.setBackground(new java.awt.Color(255, 255, 204));
        jTextIn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel2.add(jTextIn);
        jTextIn.setBounds(300, 220, 460, 32);

        jBBack.setBackground(new java.awt.Color(51, 51, 255));
        jBBack.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jBBack.setText("BACK");
        jBBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBackActionPerformed(evt);
            }
        });
        jPanel2.add(jBBack);
        jBBack.setBounds(940, 580, 110, 40);

        btnSearch.setBackground(new java.awt.Color(51, 51, 255));
        btnSearch.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnSearch.setText("SEARCH");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        jPanel2.add(btnSearch);
        btnSearch.setBounds(840, 210, 120, 50);

        buttonGroup1.add(rdbAuthor);
        rdbAuthor.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        rdbAuthor.setText("SEARCH BY AUTHOR");
        jPanel2.add(rdbAuthor);
        rdbAuthor.setBounds(240, 140, 210, 31);

        buttonGroup1.add(rdbCatego);
        rdbCatego.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        rdbCatego.setText("SEARCH BY CATEGORY");
        jPanel2.add(rdbCatego);
        rdbCatego.setBounds(510, 140, 231, 31);

        buttonGroup1.add(rdbTitle);
        rdbTitle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        rdbTitle.setText("SEARCH BY BOOK NAME");
        rdbTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbTitleActionPerformed(evt);
            }
        });
        jPanel2.add(rdbTitle);
        rdbTitle.setBounds(810, 140, 243, 31);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/LMSImages/backround6.jpg"))); // NOI18N
        jPanel2.add(jLabel2);
        jLabel2.setBounds(0, 0, 1500, 680);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1500, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 680, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        if(this.rdbAuthor.isSelected()== true){
      
          Input = this.jTextIn.getText();
        
            DefaultTableModel dtm = new DefaultTableModel();
        
            dtm.addColumn("BookID");
            dtm.addColumn("BookName");
            dtm.addColumn("Price");
            dtm.addColumn("AuthFName");
            dtm.addColumn("AuthLName");
            dtm.addColumn("Category");
         
         String Query = "SELECT * FROM book INNER JOIN bookwrite ON book.BookID = bookwrite.BookID INNER JOIN author ON "
                 + "author.AuthID = bookwrite.AuthID WHERE author.AuthFName = '"+Input+"'" ;
         
         DBConnection.DBConnection();
         
         try{
             Statement st = DBConnection.con.prepareStatement(Query);
             ResultSet rs = st.executeQuery(Query);
             while(rs.next()){
                 
                String BookID = rs.getString("BookID");
                String BookName = rs.getString("BookName");
                String Price = rs.getString("Price");
                String AuthFName = rs.getString("AuthFName");
                String AuthLName = rs.getString("AuthLName");
                String Category = rs.getString("Category");
                
                 dtm.addRow(new String[]{BookID, BookName, Price, AuthFName, AuthLName, Category});
             
         }            
             this.jTable1.setModel(dtm);
             
             DBConnection.con.close();
                     
         }catch(SQLException ex){
             
            JOptionPane.showMessageDialog(null, ex.getMessage());
            
         }
              
        }
        else if (this.rdbCatego.isSelected()==true){
        
          Input = this.jTextIn.getText();
        
            DefaultTableModel dtm = new DefaultTableModel();
        
            dtm.addColumn("BookID");
            dtm.addColumn("BookName");
            dtm.addColumn("Price");
            dtm.addColumn("AuthFName");
            dtm.addColumn("AuthLName");
            dtm.addColumn("Category");
         
         String Query = "SELECT * FROM book INNER JOIN bookwrite ON book.BookID = bookwrite.BookID INNER JOIN author ON "
                 + "author.AuthID = bookwrite.AuthID WHERE book.Category = '"+Input+"'" ;
         
         DBConnection.DBConnection();
         
         try{
             Statement st = DBConnection.con.prepareStatement(Query);
             ResultSet rs = st.executeQuery(Query);
             while(rs.next()){
                 
                String BookID = rs.getString("BookID");
                String BookName = rs.getString("BookName");
                String Price = rs.getString("Price");
                String AuthFName = rs.getString("AuthFName");
                String AuthLName = rs.getString("AuthLName");
                String Category = rs.getString("Category");
                
                 dtm.addRow(new String[]{BookID, BookName, Price, AuthFName, AuthLName, Category});
             
         }            
             this.jTable1.setModel(dtm);
                              
         }catch(SQLException ex){
             
            JOptionPane.showMessageDialog(null, ex.getMessage());
            
         }
    
        }
        else if(this.rdbTitle.isSelected()==true){
      
          Input = this.jTextIn.getText();
        
            DefaultTableModel dtm = new DefaultTableModel();
        
            dtm.addColumn("BookID");
            dtm.addColumn("BookName");
            dtm.addColumn("Price");
            dtm.addColumn("AuthFName");
            dtm.addColumn("AuthLName");
            dtm.addColumn("Category");
         
         String Query = "SELECT * FROM book INNER JOIN bookwrite ON book.BookID = bookwrite.BookID INNER JOIN author ON "
                 + "author.AuthID = bookwrite.AuthID WHERE book.BookName= '"+Input+"'" ;
         
         DBConnection.DBConnection();
         
         try{
             Statement st = DBConnection.con.prepareStatement(Query);
             ResultSet rs = st.executeQuery(Query);
             while(rs.next()){
                 
                String BookID = rs.getString("BookID");
                String BookName = rs.getString("BookName");
                String Price = rs.getString("Price");
                String AuthFName = rs.getString("AuthFName");
                String AuthLName = rs.getString("AuthLName");
                String Category = rs.getString("Category");
                
                 dtm.addRow(new String[]{BookID, BookName, Price, AuthFName, AuthLName, Category});             
         }            
             this.jTable1.setModel(dtm);
             
             DBConnection.con.close();
             
         
         }catch(SQLException ex){
             
            JOptionPane.showMessageDialog(null, ex.getMessage());
            
        }
      
        }
      
        else{
      
          JOptionPane.showMessageDialog(null, "Please Select the Type of Search", "Warning", JOptionPane.WARNING_MESSAGE);
      
        }
        
    }//GEN-LAST:event_btnSearchActionPerformed

    private void jBBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBackActionPerformed
        if(UserType.usertype == "Librarian"){
        
            LibrarianPanel lp = new LibrarianPanel();
            lp.setVisible(true);
            this.dispose();
        
        }else if(UserType.usertype == "Member"){
        
            MemberPanel mp = new MemberPanel();
            mp.setVisible(true);
            this.dispose();
        
        }else{
        
            JOptionPane.showMessageDialog(null, "error");
              
        }
      
    }//GEN-LAST:event_jBBackActionPerformed

    private void rdbTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbTitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdbTitleActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchBook().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jBBack;
    private javax.swing.JLabel jLSearch;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextIn;
    private javax.swing.JRadioButton rdbAuthor;
    private javax.swing.JRadioButton rdbCatego;
    private javax.swing.JRadioButton rdbTitle;
    // End of variables declaration//GEN-END:variables
}
