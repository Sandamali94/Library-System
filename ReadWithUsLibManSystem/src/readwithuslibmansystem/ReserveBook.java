/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package readwithuslibmansystem;

import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author abans tangalle
 */
public class ReserveBook extends javax.swing.JFrame {

    public String BookID, MemID, ResDate, No_of_Days, No_of_Book, Available;
    
    /**
     * Creates new form ReserveBook
     */
    public ReserveBook() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLResBo = new javax.swing.JLabel();
        jLBI = new javax.swing.JLabel();
        jLMI = new javax.swing.JLabel();
        jLReseDa = new javax.swing.JLabel();
        jLNoDay = new javax.swing.JLabel();
        jLNoBook = new javax.swing.JLabel();
        jLAva = new javax.swing.JLabel();
        jTBI = new javax.swing.JTextField();
        jTMI = new javax.swing.JTextField();
        jTNoDay = new javax.swing.JTextField();
        jTNoCopies = new javax.swing.JTextField();
        jTAva = new javax.swing.JTextField();
        jXDateReserveDate = new org.jdesktop.swingx.JXDatePicker();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jBSubm = new javax.swing.JButton();
        jBUpda = new javax.swing.JButton();
        jBDele = new javax.swing.JButton();
        jBBac = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Reserve Book");

        jPanel1.setLayout(null);

        jLResBo.setFont(new java.awt.Font("Algerian", 1, 36)); // NOI18N
        jLResBo.setText("Reserve BOOK");
        jPanel1.add(jLResBo);
        jLResBo.setBounds(550, 40, 280, 50);

        jLBI.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLBI.setText("Book ID                         :");
        jPanel1.add(jLBI);
        jLBI.setBounds(30, 130, 290, 30);

        jLMI.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLMI.setText("Memebr ID                    :");
        jPanel1.add(jLMI);
        jLMI.setBounds(30, 190, 290, 40);

        jLReseDa.setBackground(new java.awt.Color(255, 255, 255));
        jLReseDa.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLReseDa.setText("Reserve Date                 :");
        jPanel1.add(jLReseDa);
        jLReseDa.setBounds(30, 270, 290, 30);

        jLNoDay.setBackground(new java.awt.Color(255, 255, 255));
        jLNoDay.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLNoDay.setText("No.Of.Days Reserved    :");
        jPanel1.add(jLNoDay);
        jLNoDay.setBounds(30, 350, 290, 29);

        jLNoBook.setBackground(new java.awt.Color(255, 255, 255));
        jLNoBook.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLNoBook.setText("No.Of.Copies Reserved :");
        jPanel1.add(jLNoBook);
        jLNoBook.setBounds(30, 500, 290, 50);

        jLAva.setBackground(new java.awt.Color(255, 255, 255));
        jLAva.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLAva.setText("Available                        :");
        jPanel1.add(jLAva);
        jLAva.setBounds(30, 420, 290, 50);

        jTBI.setBackground(new java.awt.Color(255, 255, 204));
        jTBI.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTBI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTBIActionPerformed(evt);
            }
        });
        jTBI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTBIKeyPressed(evt);
            }
        });
        jPanel1.add(jTBI);
        jTBI.setBounds(330, 130, 400, 32);

        jTMI.setBackground(new java.awt.Color(255, 255, 204));
        jTMI.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTMI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTMIKeyPressed(evt);
            }
        });
        jPanel1.add(jTMI);
        jTMI.setBounds(330, 200, 400, 32);

        jTNoDay.setBackground(new java.awt.Color(255, 255, 204));
        jTNoDay.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTNoDay.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTNoDayKeyPressed(evt);
            }
        });
        jPanel1.add(jTNoDay);
        jTNoDay.setBounds(330, 350, 400, 32);

        jTNoCopies.setBackground(new java.awt.Color(255, 255, 204));
        jTNoCopies.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTNoCopies.setToolTipText("Mouse Click to Update the Book Quantity");
        jTNoCopies.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTNoCopiesMouseClicked(evt);
            }
        });
        jTNoCopies.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTNoCopiesKeyPressed(evt);
            }
        });
        jPanel1.add(jTNoCopies);
        jTNoCopies.setBounds(330, 510, 400, 32);

        jTAva.setBackground(new java.awt.Color(255, 255, 204));
        jTAva.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTAva.setToolTipText("");
        jTAva.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTAvaMouseClicked(evt);
            }
        });
        jTAva.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTAvaKeyPressed(evt);
            }
        });
        jPanel1.add(jTAva);
        jTAva.setBounds(330, 430, 400, 32);

        jXDateReserveDate.setBackground(new java.awt.Color(255, 255, 204));
        jXDateReserveDate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jXDateReserveDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jXDateReserveDateKeyPressed(evt);
            }
        });
        jPanel1.add(jXDateReserveDate);
        jXDateReserveDate.setBounds(330, 270, 400, 32);

        jScrollPane1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jTable1.setBackground(new java.awt.Color(204, 204, 204));
        jTable1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Book ID", "Member ID", "Reserve Date", "No Of Days Reserved", "No Of Copies Reserved"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(740, 130, 610, 410);

        jBSubm.setBackground(new java.awt.Color(51, 51, 255));
        jBSubm.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jBSubm.setText("SUBMIT");
        jBSubm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSubmActionPerformed(evt);
            }
        });
        jPanel1.add(jBSubm);
        jBSubm.setBounds(40, 590, 110, 40);

        jBUpda.setBackground(new java.awt.Color(51, 51, 255));
        jBUpda.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jBUpda.setText("UPDATE");
        jBUpda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBUpdaActionPerformed(evt);
            }
        });
        jPanel1.add(jBUpda);
        jBUpda.setBounds(230, 590, 110, 40);

        jBDele.setBackground(new java.awt.Color(51, 51, 255));
        jBDele.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jBDele.setText("DELETE");
        jBDele.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDeleActionPerformed(evt);
            }
        });
        jPanel1.add(jBDele);
        jBDele.setBounds(420, 590, 110, 40);

        jBBac.setBackground(new java.awt.Color(51, 51, 255));
        jBBac.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jBBac.setText("BACK");
        jBBac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBacActionPerformed(evt);
            }
        });
        jPanel1.add(jBBac);
        jBBac.setBounds(1210, 590, 110, 40);

        btnClear.setBackground(new java.awt.Color(51, 51, 255));
        btnClear.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnClear.setText("CLEAR");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        jPanel1.add(btnClear);
        btnClear.setBounds(610, 590, 110, 40);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/LMSImages/backround6.jpg"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 1500, 680);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1500, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 680, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBBacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBacActionPerformed
        MemberPanel mp = new MemberPanel();
        mp.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jBBacActionPerformed

    private void jBSubmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSubmActionPerformed
        if(this.jTBI.getText().isEmpty()==true){
    
        JOptionPane.showMessageDialog(null, "Please Insert Book ID", "Warning", JOptionPane.WARNING_MESSAGE);
    
       }else if(this.jTMI.getText().isEmpty()==true){
    
        JOptionPane.showMessageDialog(null, "Please Insert Member ID", "Warning", JOptionPane.WARNING_MESSAGE);
           
       }else if(this.jXDateReserveDate.getDate()==null){
    
        JOptionPane.showMessageDialog(null, "Please Insert Reserve Date", "Warning", JOptionPane.WARNING_MESSAGE);
    
       }else if(this.jTNoDay.getText().isEmpty()==true){
    
        JOptionPane.showMessageDialog(null, "Please Insert No Of Days", "Warning", JOptionPane.WARNING_MESSAGE);
            
       }else if(this.jTNoCopies.getText().isEmpty()==true){
    
        JOptionPane.showMessageDialog(null, "Please Insert  No Of Books", "Warning", JOptionPane.WARNING_MESSAGE);
            
       }else{
       
           BookID = this.jTBI.getText();
           MemID = this.jTMI.getText();
           SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
           ResDate = sdf.format(this.jXDateReserveDate.getDate());
           No_of_Days = this.jTNoDay.getText();
           No_of_Book = this.jTNoCopies.getText();
           
           
           DBConnection.DBConnection();
           
           try{
           
               Statement s = DBConnection.con.createStatement();
               s.executeUpdate("INSERT INTO reserve VALUES('"+BookID+"','"+MemID+"','"+ResDate+"','"+No_of_Days+"','"+No_of_Book+"')");
               
               JOptionPane.showMessageDialog(null, "Book is Reserved Successfully", "Successful", JOptionPane.INFORMATION_MESSAGE);
               
               LoadTable ();
               ClearData();
               DBConnection.con.close();
               
           }catch(SQLException ex){
           
               JOptionPane.showMessageDialog(null, ex.getMessage());
               
           }       
       }                                    
  
    }//GEN-LAST:event_jBSubmActionPerformed

    private void jTBIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTBIActionPerformed

    }//GEN-LAST:event_jTBIActionPerformed

    private void jTBIKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTBIKeyPressed
       
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){        
            this.jTMI.grabFocus();
            
            BookID = this.jTBI.getText();
            
            String Query = "SELECT * FROM reserve WHERE BookID = '"+BookID+"'";            
            DBConnection.DBConnection();
            
                try {                 
                    Statement s = DBConnection.con.createStatement();
                    ResultSet rs = s.executeQuery(Query);
                    while(rs.next()){
                        this.jTMI.setText(rs.getString("MemID"));
                        SimpleDateFormat Date = new SimpleDateFormat("yyyy-MM-dd");
                        this.jXDateReserveDate.setDate(rs.getDate("ReserveDate"));
                        this.jTNoDay.setText(rs.getString("NoOfDays"));
                        this.jTNoCopies.setText(rs.getString("NoOfCopies"));                                                
                    }
                              
                } catch (Exception ex) {
                    
                     JOptionPane.showMessageDialog(null, ex.getMessage());
                    
                }        
        }
    }//GEN-LAST:event_jTBIKeyPressed

    private void jBUpdaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBUpdaActionPerformed
           
           BookID = this.jTBI.getText();
           MemID = this.jTMI.getText();
           SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
           ResDate = sdf.format(this.jXDateReserveDate.getDate());
           No_of_Days = this.jTNoDay.getText();
           No_of_Book = this.jTNoCopies.getText();
           
           try {
               
               Statement s = DBConnection.con.createStatement();
               s.executeUpdate("UPDATE `reserve` SET `MemID`='"+MemID+"', `ReserveDate`='"+ResDate+"', `NoOfDays`='"+No_of_Days+"',`NoOfCopies`='"+No_of_Book+"' WHERE `BookID`= '"+BookID+"'");
             
               JOptionPane.showMessageDialog(null, "Reserved Book Updated Successfully", "Successful", JOptionPane.INFORMATION_MESSAGE);
               
               LoadTable ();
               ClearData();
               
               DBConnection.con.close();
               
           } catch (SQLException ex) {
               
               JOptionPane.showMessageDialog(null, ex.getMessage());
               
        }
    }//GEN-LAST:event_jBUpdaActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        
        ClearData();
        
    }//GEN-LAST:event_btnClearActionPerformed

    private void jBDeleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDeleActionPerformed
        
        BookID = this.jTBI.getText();
       
        DBConnection.DBConnection();
        
        try{
            
            Statement st = DBConnection.con.createStatement();
            st.executeUpdate("DELETE FROM `reserve` WHERE `BookID`= '"+BookID+"'");
            
            JOptionPane.showMessageDialog(null, "Reserved Book Deleted Successfully", "Successful", JOptionPane.INFORMATION_MESSAGE);
            
            LoadTable ();
            ClearData();
            DBConnection.con.close();
            
        }catch(SQLException ex){
            
            JOptionPane.showMessageDialog(null, ex.getMessage());
            
        }
    }//GEN-LAST:event_jBDeleActionPerformed

    private void jTMIKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTMIKeyPressed
        
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            
            this.jXDateReserveDate.grabFocus();
        }
        
    }//GEN-LAST:event_jTMIKeyPressed

    private void jXDateReserveDateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jXDateReserveDateKeyPressed
        
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            
            this.jTNoDay.grabFocus();
        }
        
    }//GEN-LAST:event_jXDateReserveDateKeyPressed

    private void jTNoDayKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTNoDayKeyPressed
       
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            
            this.jTNoCopies.grabFocus();
        }
        
    }//GEN-LAST:event_jTNoDayKeyPressed

    private void jTNoCopiesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTNoCopiesKeyPressed
       
    }//GEN-LAST:event_jTNoCopiesKeyPressed

    private void jTAvaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTAvaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTAvaKeyPressed

    private void jTNoCopiesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTNoCopiesMouseClicked
        
        GetAvailable();
       
    }//GEN-LAST:event_jTNoCopiesMouseClicked

    private void jTAvaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTAvaMouseClicked
        
        BookID = this.jTBI.getText();
            
            String Query = "SELECT  Available FROM book WHERE BookID = '"+BookID+"'";
            
            DBConnection.DBConnection();
            
                try {
                    
                    Statement s = DBConnection.con.createStatement();
                    ResultSet rs = s.executeQuery(Query);
                    while(rs.next()){
                        
                        this.jTAva.setText(rs.getString("Available"));
                                                               
                    }
                              
                } catch (Exception ex) {
                    
                     JOptionPane.showMessageDialog(null, ex.getMessage());
                    
                }        
        
    }//GEN-LAST:event_jTAvaMouseClicked
    
    void UpdateBookQuantity(){
        
           int Quantity;
           
           Available = this.jTAva.getText();
           
           try {
               
               Statement s = DBConnection.con.createStatement();
               s.executeUpdate("UPDATE `book` SET `Available`='"+Available+"' WHERE `BookID`= '"+BookID+"'");
               
               JOptionPane.showMessageDialog(null, "Quantity is Updated", "Successful", JOptionPane.INFORMATION_MESSAGE);
             
               
               DBConnection.con.close();
               
           }catch (SQLException ex) {
               
               JOptionPane.showMessageDialog(null, ex.getMessage());
               
           }  
    }
    
    void GetAvailable(){
        
        int avail, copies;
        
                 avail = Integer.parseInt(this.jTAva.getText());
                 copies = Integer.parseInt(this.jTNoCopies.getText()) ;
            
                    if(avail >= 5   ){
                    
                        int Total = ((avail) - (copies));
                        String available = String.valueOf(Total);
                    
                        this.jTAva.setText(available);
                    }              
                    else{
                    
                        JOptionPane.showMessageDialog(null, "No Available Books");
            
                    }
            UpdateBookQuantity();
    }
    
    void ClearData(){
    
         this.jTBI.setText("");
         this.jTMI.setText("");
         this.jXDateReserveDate.setDate(null);//remove value in the field
         this.jTNoCopies.setText("");
         this.jTAva.setText("");
         this.jTNoDay.setText("");
   
    }
    
    void LoadTable (){
        
         DefaultTableModel dtm = new DefaultTableModel();
         
            dtm.addColumn("BookID");
            dtm.addColumn("MemID");
            dtm.addColumn("ReserveDate");
            dtm.addColumn("NoOfDays");
            dtm.addColumn("NoOfCopies");
         
         String Query = "SELECT * FROM reserve";
         
         DBConnection.DBConnection();
         
         try{
             Statement st = DBConnection.con.prepareStatement(Query);
             ResultSet rs = st.executeQuery(Query);
             while(rs.next()){
                 
                String BookID = rs.getString("BookID");
                String MemId = rs.getString("MemID");
                String ReserveDate = rs.getString("ReserveDate");      
                String NoOfDays = rs.getString("NoOfDays");
                String NoOfCopies = rs.getString("NoOfCopies");
           
             dtm.addRow(new String[]{BookID, MemId, ReserveDate, NoOfDays, NoOfCopies});
             
             }         
             this.jTable1.setModel(dtm);
             
             DBConnection.con.close();
         
         }catch(SQLException ex){
             
            JOptionPane.showMessageDialog(null, ex.getMessage());
            
        }
    }
    
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReserveBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReserveBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReserveBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReserveBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReserveBook().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton jBBac;
    private javax.swing.JButton jBDele;
    private javax.swing.JButton jBSubm;
    private javax.swing.JButton jBUpda;
    private javax.swing.JLabel jLAva;
    private javax.swing.JLabel jLBI;
    private javax.swing.JLabel jLMI;
    private javax.swing.JLabel jLNoBook;
    private javax.swing.JLabel jLNoDay;
    private javax.swing.JLabel jLResBo;
    private javax.swing.JLabel jLReseDa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTAva;
    private javax.swing.JTextField jTBI;
    private javax.swing.JTextField jTMI;
    private javax.swing.JTextField jTNoCopies;
    private javax.swing.JTextField jTNoDay;
    private javax.swing.JTable jTable1;
    private org.jdesktop.swingx.JXDatePicker jXDateReserveDate;
    // End of variables declaration//GEN-END:variables
}
